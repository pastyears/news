.flex{      // 定义弹性盒模型
  display: flex;
  display: -webkit-flex;
  display: -ms-flex;
}
.row{       // 主轴方向为水平方向，元素正序
  flex-direction: row;
  -webkit-flex-direction:row;
  -ms-flex-direction: row;
  -moz-flex-direction: row;
  -o-flex-direction: row
}
.row-reverse{   // 主轴方向为水平方向，元素倒序
  flex-direction: row-reverse;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
}
.column{    // 主轴方向为垂直方向，元素正序
  flex-direction: column;
  -ms-flex-direction: column;
  -webkit-flex-direction: column;
}
.column-reserve{    // 主轴方向为垂直方向，元素为倒序
  flex-direction: column-reverse;
  -webkit-flex-direction: column-reverse;
  -ms-flex-direction: column-reverse;
}
.content-start{    // 元素在主轴开始位置，富余空间在主轴结束位置
  justify-content: flex-start;
  -webkit-justify-content: flex-start;
  -ms-justify-content: flex-start
}
.content-end{      // 元素在主轴结束位置，富于空间在主轴开始位置
  justify-content: flex-end;
  -webkit-justify-content: flex-end;
}
.content-center{   // 元素在主轴中间，富于空间在主轴两侧
  justify-content: center;
  -webkit-justify-content: center;
}
.content-between{     // 富于空间平均分配在每两个元素中间
  justify-content: space-between;
  -webkit-justify-content: space-between;
}
.content-around{     //  富于空间平均分布在每个元素两侧
  justify-content: space-around;
  -webkit-justify-content: space-around;
}
.items-start{     // 元素在侧轴开始位置，富于空间在侧轴结束位置
  align-items: flex-start;
  -webkit-align-items: flex-start;
}
.items-end{     // 元素在侧轴结束位置，富于空间在侧轴开始位置
  align-items: flex-end;
  -webkit-align-items: flex-end;
}
.items-center{  // 元素在侧轴中间位置，富裕空间平均分布在元素两端
  align-items: center;
  -webkit-align-items: center;
}
.items-baseline{    // 参考文字基线对齐
  align-items: baseline;
  -webkit-align-items: baseline;
}
.items-stretch{   // 指定侧轴值为auto，则其值会尽可就能的接近所在行的边界
  align-items: stretch;
  -webkit-align-items: stretch;
}
.self-auto{ // 当为auto是，计算值为元素的父元素的align-items值，如果没有父元素，则计算值为stretch
  align-self: auto;
  -webkit-self: auto;
}
.self-start{  // 子元素相对父元素侧轴开始位置 开始
  align-self: flex-start;
  -webkit-self: flex-start;
}
.self-end{  // 子元素相对父元素侧轴结束位置 开始
  align-self: flex-end;
  -webkit-self: flex-end;
}
.self-center{ // 子元素相对父元素侧轴中间位置 开始
  align-self: center;
  -webkit-self: center;
}
.self-baseline{ // 子元素的行内与侧轴为同一条，则该值为flex-start；否则参考与基线对齐
  align-self: baseline;
  -webkit-self: baseline;
}
.self-stretch{  // 如果侧轴大小为auto，则其值尽可能的接近合模型的边界
  align-self: stretch;
  -webkit-self: stretch;
}
.nowrap{  // 容器为单行，元素可能溢出
  flex-wrap: nowrap;
  -webkit-wrap: nowrap;
}
.wrap{  // 容器为多行，溢出部分会放到下一行，元素可能会断行
  flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
}
/*子元素宽度*/
.grow-a{    // 元素宽度为：元素本身设置的宽度加上按比例分配的宽度
  flex-grow: 1;
  -webkit-flex-grow: 1;
}
.grow-b{
  flex-grow: 2;
  -webkit-flex-grow: 2;
}
.grow-c{
  flex-grow: 3;
  -webkit-flex-grow: 3;
}
.flex-a{  // 元素宽度： 元素按照值得比列分配
  flex: 1;
  -webkit-flex: 1;
}
.flex-b{
  flex: 2;
  -webkit-flex: 2;
}
.flex-c{
  flex: 3;
  -webkit-flex: 3;
}
.order-a{   // 值越小越靠前
  order: -1;
}
.order-b{
  order: -2;
}
.order-c{
  order: -3;
}
.t-center{
  text-align: center;
}
